services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db

  backend:
    image: node:16.14.2
    ports:
      - 8080:8080
    volumes:
      - ./backend/files:/server/files
    environment:
      - MONGO_URI=mongodb://admin:password@mongodb:27017
    command: ["/bin/bash", "-c", "cd /server/files/ && npm i && npm start"]
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD-SHELL", "curl --fail localhost:8080/login"]
      interval: 1m30s # improve this
      timeout: 30s # improve this
      retries: 5
      start_period: 30s # improve this

  frontend:
    image: node:16.14.2
    ports:
      - 3000:3000
    volumes:
      - ./frontend/files:/frontend/files
    environment:
      - WDS_SOCKET_PORT=0
    command: ["/bin/bash", "-c", "cd /frontend/files/ && npm i && npm run build && npm install -g serve && serve -s build"]
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl --fail localhost:3000"]
      interval: 1m30s # improve this
      timeout: 30s # improve this
      retries: 5
      start_period: 30s # improve this

  gateway:
    image: nginx:latest
    ports:
      - :80
    volumes:
      - ./gateway/docker-compose-templates:/etc/nginx/templates
    environment:
      - NGINX_PORT_NUMBER=80
      - NGINX_ROOT_FOLDER=/var/www/html
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=3000
      - BACKEND_HOST=backend
      - BACKEND_PORT=8080
    depends_on:
      frontend:
        condition: service_healthy

# Define named volumes
volumes:
  mongo-data:
    driver: local